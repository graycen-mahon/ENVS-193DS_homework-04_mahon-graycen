---
title: "Homework #4"
author: "Graycen Mahon"
format: pdf
editor: visual
---

# Homework #4

```{r}
here::set_here("/Users/graycenmahon/Downloads/ENVS 193DS/ENVS-193DS_homework-04_mahon-graycen")
```

1) How does fish length predict fish weight for trout perch? (across all sample years)

H0: Fish length does not predict fish weight in trout perch, there is no correlation between the two. 
HA: Fish length and fish weight are positively correlated, as fish length increases, so does its length and vice versa. 

```{r read-in-the-data-file}
data <- read.csv("north_temperate_lakes.csv")
```

```{r summarizing-the-whole-data-frame}
total_data_summary <- data %>% 
  summarize(mean_l = mean(length, na.rm = TRUE),
            mean_w = mean(weight, na.rm = TRUE),
            sd_l = sd(length, na.rm = TRUE),
            sd_w = mean(weight, na.rm = TRUE),
            var_l = var(length, na.rm = TRUE),
            var_w = mean(weight, na.rm = TRUE),
            count = length(length))
total_data_summary
```


```{r filtering-the-data-for-troutperch}
troutperch_data <- data %>% 
# using the mutate and filter functions, adjust the column title and then filter the large dataset to view only the trout perch fish. Mutating the column name is optional, I preferred it to be this way, however. 
  mutate(spname = case_when(spname == "TROUTPERCH" ~ "trout_perch")) %>% 
  filter(spname == "trout_perch")
```

```{r missing-data-visualization}
# using the gg missing data function, call on the new data to make a visualization showing the missing data points.
gg_miss_var(troutperch_data)
# here we can see that there are just under 200 missing values for the trout perch weight category. This is relevant to my hypothesis because I am looking at the data in order to determine whether or not fish length has an effect on fish weight for trout perch, and with most of the weight measurements for this specific fish it will make my conclusion less reliable. 
```

```{r summarizing-data-frame}
data_summary <- data %>% 
  group_by(spname) %>% 
  summarize(mean_l = mean(length, na.rm = TRUE),
            mean_w = mean(weight, na.rm = TRUE),
            sd_l = sd(length, na.rm = TRUE),
            sd_w = mean(weight, na.rm = TRUE),
            var_l = var(length, na.rm = TRUE),
            var_w = mean(weight, na.rm = TRUE),
            count = length(length))
# this code chunk is summarizing my data by mean, standard deviation, variance, and count for both the length and weight of the trout perch fish in all sample years. 

data_summary
```

```{r running-a-linear-test-and-plotting-model-object}
modelobject <- lm(weight ~ length, data = troutperch_data)
plot(modelobject)
```

# Checking my assumptions:
There are four assumptions of linear models:

1) There is a linear relationship between dependent and independent variables
According to the first plot (residuals vs fitted) the pattern and distributions of points show a fairly linear relationship between the two variables. There is no pattern or clear trend amongst the points. 

2) Independent errors (no correlation between errors)
The second plot (Q-Q Residuals) shows that the data set follows a mostly normal distribution. Towards the end of the graph the data points veer off the dotted line, indicating a data set that is not entirely normally distributed. 

3) Homoscedasticity (constant variance) of errors
In the third plot (Scale-location), testing for the ratio of variance, we can see that due to the data points being pretty evenly and randomly distributed along the fairly straight red line, that the data set is indeed homeoscedastic. 

4) Normally distributed errors
Lastly, the final plot (Residuals vs Leverage) is a plot that shows which, and how many, points in a data set are considered influential. If any point in this plot falls outside of Cookâ€™s distance (the black dashed lines in the upper right hand corner) then it is considered to be an influential observation and if removed from the dataset, the coefficients would change drastically. This specifc plot shows that there are very few influential points in the dataset, with only 1 points falling outside the dashed lines. 

```{r summary-modelobject}
summary(modelobject)
```

```{r ANOVA-table-of-modelobject}
anova(modelobject)
summary.aov(modelobject)

```

